@page "/leads"
@using Newtonsoft.Json;
@using last.ConnectionData;
@using System.Text;
@inject NavigationManager NavManager

<link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'>
<link href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-beta/css/bootstrap.min.css' rel='stylesheet' type='text/css'>
<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.5.0/css/font-awesome.min.css' rel='stylesheet' type='text/css'>

<div class="container-fluid">
    <div class="animated fadeIn">
        <div class="row">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <strong>General Information</strong>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="name">Customer Name</label>
                                    <input class="form-control" id="name" type="text" placeholder="Enter your name">
                                </div>
                            </div>
                        </div>
                        <!-- /.row-->
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="ccnumber">Mobile1</label>
                                    <input class="form-control" id="ccnumber" type="text" placeholder="Enter Your Mobile Number">
                                </div>
                            </div>
                        </div>
                         <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="ccnumber">Mobile2</label>
                                    <input class="form-control" id="ccnumber" type="text" placeholder="Enter Your Alternate Number">
                                </div>
                            </div>
                        </div>
                         <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="ccnumber">Contact Name</label>
                                    <input class="form-control" id="ccnumber" type="text" placeholder="Enter Your Contact Name">
                                </div>
                            </div>
                        </div>
                        <!-- /.row-->
                        <div class="row">
                            <div class="form-group col-sm-4">
                                <label for="ccmonth1">Select Category</label>
                                <select class="form-control" id="ccmonth1">
                                    <option>2</option>
                                    <option>3</option>
                                    <option>4</option>
                                    <option>5</option>
                                    <option>6</option>
                                    <option>7</option>
                                    <option>8</option>
                                    <option>9</option>
                                    <option>10</option>
                                    <option>11</option>
                                    <option>12</option>
                                </select>
                            </div>                           
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-4">
                                <label for="ccmonth">Source</label>
                                <select class="form-control" id="ccmonth">
                                    <option>1</option>
                                    <option>2</option>
                                    <option>3</option>
                                    <option>4</option>
                                    <option>5</option>
                                    <option>6</option>
                                    <option>7</option>
                                    <option>8</option>
                                    <option>9</option>
                                    <option>10</option>
                                    <option>11</option>
                                    <option>12</option>
                                </select>
                            </div>                           
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-4">
                                <label for="ccmonth">Status</label>
                                <select class="form-control" id="ccmonth">
                                    <option>1</option>
                                    <option>2</option>
                                    <option>3</option>
                                    <option>4</option>
                                    <option>5</option>
                                    <option>6</option>
                                    <option>7</option>
                                    <option>8</option>
                                    <option>9</option>
                                    <option>10</option>
                                    <option>11</option>
                                    <option>12</option>
                                </select>
                            </div>                           
                        </div>
                         <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="ccnumber">Remark</label>
                                    <input class="form-control" id="ccnumber" type="text" placeholder="Description">
                                </div>
                            </div>
                        </div>
                         <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="ccnumber">Remark</label>
                                    <input class="form-control" id="ccnumber" type="text" placeholder="Description">
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                                <label class="col-md-3 col-form-label" for="date-input">Follow Up Date</label>
                                <div class="col-md-9">
                                    <input class="form-control" id="date-input" type="date" name="date-input" placeholder="Date">
                                    <span class="help-block">Please enter a valid date</span>
                                </div>
                         </div>
                    </div>
                </div>
            </div>
            <!-- /.col-->
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <strong>Contact Details</strong>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <label for="company">Address</label>
                            <input class="form-control" id="company" type="text" placeholder="Enter your Address">
                        </div>
                        <div class="form-group">
                            <label for="vat">Business Name</label>
                            <input class="form-control" id="vat" type="text" placeholder="Enter your Business Name">
                        </div>                       

                    </div>
                </div>
            </div>
             <div class="card-footer">
                <button class="btn btn-sm btn-primary" type="submit" onclick="@loginFunction">
                    <i class="fa fa-dot-circle-o"></i> Submit
                </button>
                <button class="btn btn-sm btn-danger" type="reset">
                    <i class="fa fa-ban"></i> Reset
                </button>
            </div>
        </div>

    </div>
</div>

@code {
    string catagoryName = "";
    string descriptionCatagory = "";
    string selectedType = "SUCCESS";

    void descriptionStatusFun1()
    {
        selectedType = "SUCCESS";
    }
    void descriptionStatusFun2()
    {
        selectedType = "WARM";
    }
    void descriptionStatusFun3()
    {
        selectedType = "ERROR";
    }
    //aditional items

    async void catagoryFunction()
    {
        //Login funtion

        if (catagoryName == "" || descriptionCatagory == "")
        {
            //Pop up alert window
            await App.Current.MainPage.DisplayAlert("Alert", "Enter username/description", "OK");
        }
        else
        {
            //Call api and stuff

            var PostDataStatus = new LeadsModelClass
                {
                    id = 0,
                    categoryname = catagoryName,
                    description = descriptionCatagory,

                    status = 0,

                    createdAt = DateTime.Now,
                    updatedAt = DateTime.Now
                };

            var responseOfPost = await postDataFun(PostDataStatus);

            this.StateHasChanged();

            //              THIS IS FOR WHEN RESPONSE IS DESERIALIZED
            //if (response.message == "Login Successfully")
            //{
            //    //ALERT FOR SUCCESFUL LOGIN
            //    await App.Current.MainPage.DisplayAlert("Message", "REGISTERED SUCCESFULLY" + response.message, "OK");
            //}
            //else
            //{
            //    //ALERT FOR UNSUCCESFUL LOGIN
            //    await App.Current.MainPage.DisplayAlert("Message", response.message, "OK");
            //}

            if (responseOfPost != null)
            {
                //if return response is not null
                await App.Current.MainPage.DisplayAlert("Message", responseOfPost.message, "OK");

            }
            else
            {
                await App.Current.MainPage.DisplayAlert("Alert", "Network Error | Code : 1A-STS" + catagoryName, "OK");
            }
        }
    }

    async Task<PostResponse> postDataFun(LeadsModelClass LeadsModelClass)
    {
        //postData

        string _baseUrl = ClsConnections.url;

        var returnRespone = new PostResponse();

        try
        {
            using (var httpClient = new HttpClient())
            {
                string responseString = "";

                string url = $"{_baseUrl}/local/leadscategory";

                //added

                HttpResponseMessage response = new();
                response.EnsureSuccessStatusCode();
                HttpRequestMessage request = new HttpRequestMessage();

                string strJSON1 = JsonConvert.SerializeObject(LeadsModelClass);
                HttpMethod method = new HttpMethod("POST");

                if (strJSON1.Length > 0)
                {
                    string ostr = strJSON1.Remove(strJSON1.Length - 1, 1);
                    ostr = ostr.Remove(0, 1);
                    strJSON1 = ostr;
                    strJSON1 = strJSON1.Replace("jsonurlcatagory", "jsonurl");

                    strJSON1 = "[{" + strJSON1 + "}]";

                    var content = new StringContent(strJSON1, Encoding.UTF8, "application/json");
                    var response2 = await httpClient.PostAsync(url, content); //client.PostAsync


                    if (response.StatusCode == System.Net.HttpStatusCode.OK)
                    {
                        responseString = await response2.Content.ReadAsStringAsync();

                        returnRespone.message = responseString;
                        //JsonConvert.DeserializeObject<PostResponse>(responseString.ToString());
                        //returnRespone.message = siamese[0];
                        //JsonConvert.DeserializeObject<List<PostResponse>>(responseString.ToString());


                    }
                    else
                    {

                        var ReturnString = "ERROR on fetching report requests. upload failed; " + Environment.NewLine + " response StatusCode is : " + response2.StatusCode.ToString() + Environment.NewLine;
                        returnRespone.message = ReturnString;

                    }
                }
                return returnRespone;


            }
        }
        catch (Exception ex)
        {
            string msg = ex.Message;
        }
        return returnRespone;
    }

    //GET
    async void getDataStatus()
    {
        //Call api and stuff

        var loginData = new List<LoginModelClass>();
        loginData = await getLoginData();
        if (loginData != null)
        {

        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Alert", "Network Error | Code : 2" + userNameInput, "OK");
        }
    }


    class PostResponse
    {
        public string message { get; set; }
    }

    class LeadsModelClass
    {
        public int id { get; set; }
        public int status { get; set; }
        public int leadscategoryid { get; set; }
        public int employeeid { get; set; }

        public string leadsname { get; set; }
        
        public int mobile1 { get; set; }

        public string? source { get; set; }
        
        public DateTime? enquirydate { get; set; }
        public DateTime? discussiondate { get; set; }

        public string? address { get; set; }

        public DateTime? followup { get; set; }

        public string? businessname { get; set; }
        public string? contactname { get; set; }

        public int? mobile2 { get; set; }
        public int? costcentreid { get; set; }

        public string? followupreason { get; set; }
        public string? field1 { get; set; }
        public string? field2 { get; set; }
        public string? field3 { get; set; }

        public DateTime? createdAt { get; set; }

        public DateTime? updatedAt { get; set; }
    }

    class StatusModelClass
    {
        public int id { get; set; }
        public string? name { get; set; }
        public string? description { get; set; }

        public int? field1 { get; set; }
        public string? field1value { get; set; }
        public int? field2 { get; set; }
        public string? field2value { get; set; }
        public int? field3 { get; set; }
        public string? field3value { get; set; }

        public string? type { get; set; }
        public DateTime? createdAt { get; set; }
        public DateTime? updatedAt { get; set; }
    }

    class CatagoryModelClass
    {
        public int id { get; set; }
        public string? categoryname { get; set; }
        public string? description { get; set; }
        public int? status { get; set; }
        public DateTime? createdAt { get; set; }
        public DateTime? updatedAt { get; set; }
    }
}